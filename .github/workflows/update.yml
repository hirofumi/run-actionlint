name: Update actionlint

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
  contents: write
  pull-requests: write
  repository-projects: read

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check latest actionlint
        id: version-check
        run: |
          current=$(yq --expression '.runs.steps[].uses | capture("^docker://rhysd/actionlint:(?P<v>[^ ]+)") | .v' action.yml)
          echo "current=$current" >> "$GITHUB_OUTPUT"
          echo "::notice::current actionlint: $current"
          tags_json=$(curl 'https://hub.docker.com/v2/namespaces/rhysd/repositories/actionlint/tags')
          available=$(echo "$tags_json" | jq -r '.results[] | select(.name | test("\\d+\\.\\d+\\.\\d+")) | "\(.name)@\(.digest)"')
          echo "available:"
          echo "$available"
          latest=$(echo "$available" | head -n 1)
          echo "latest=$latest" >> "$GITHUB_OUTPUT"
          echo "::notice::latest actionlint: $latest"
          if [ "$latest" = "$current" ]; then
            echo "::notice::no need to update"
            exit
          fi
          echo "from-to=from $(echo "$current" | cut -d@ -f1) to $(echo "$latest" | cut -d@ -f1)" >> "$GITHUB_OUTPUT"
      - name: Check actionlint-update branch
        id: branch-check
        if: steps.version-check.outputs.from-to != ''
        env:
          LATEST: ${{ steps.version-check.outputs.latest }}
        run: |
          if git fetch origin actionlint-update && git show FETCH_HEAD:action.yml | grep -Fq "docker://rhysd/actionlint:$LATEST"; then
            echo "::notice::no need to push"
            exit
          fi
          git checkout -b actionlint-update
          sed -i "s|\\( uses: docker://rhysd/actionlint:\\).*|\\1${LATEST}|g" action.yml
          git add action.yml
          echo "should-push=true" >> "$GITHUB_OUTPUT"
      - name: Push actionlint-update branch
        if: steps.branch-check.outputs.should-push
        env:
          MESSAGE: Bump actionlint ${{ steps.version-check.outputs.from-to }}
        run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git commit -m "$MESSAGE"
          git push --force origin actionlint-update
      - name: Create or update pull request
        if: steps.version-check.outputs.from-to != ''
        env:
          PR_TITLE: Bump actionlint ${{ steps.version-check.outputs.from-to }}
          GH_TOKEN: ${{ github.token }}
        run: |
          pr_state=$(gh pr status --json state --jq '.currentBranch.state')
          if [ "$pr_state" = "OPEN" ]; then
            gh pr edit --title "$PR_TITLE"
          else
            gh pr create --fill
          fi
          echo "::notice::PR: $(gh pr status --json url --jq '.currentBranch.url')"
